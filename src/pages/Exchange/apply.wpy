<template lang="wxml">
  <view class="apply">
    <BackHome bottom="50"/>
    <view class="top">
      <view class="title flex-between">
        <image src="https://blockchain-1253289665.cos.ap-beijing.myqcloud.com/images/exchange/%E6%8D%A2%E5%87%BA%402x%402x.png" class="icon image" />
        <view class="word">我要换出积分</view>
      </view>
      <view class="name flex-between">
        <view class="left">积分名称：</view>
        <navigator url="/pages/Exchange/selectPoint?flag=1" hover-class="none" class="right flex-between">
          <view class="pointName">{{outPointName}}</view>
          <image  src="/images/up.png" class="image"></image>
        </navigator>
      </view>
      <view class="name flex-between">
        <view class="left">积分数量：</view>
        <view class="right flex-between">
          <input
          class="input-num"
          type="number"
          value="{{outBalance}}"
          bindinput="bindOutInput"
          placeholder="请输入换出积分数"
          placeholder-style="color:rgba(153,153,153,1);font-size:24rpx;font-weight:400;"
          />
          <image  src="/images/up.png" class="image"></image>
        </view>
      </view>
    </view>
    <view class="top">
      <view class="title flex-between">
        <image src="https://blockchain-1253289665.cos.ap-beijing.myqcloud.com/images/exchange/%E6%8D%A2%E5%85%A5%402x%402x.png" class="icon image" />
        <view class="word">我需要的积分</view>
      </view>
      <view class="name flex-between">
        <view class="left">积分名称：</view>
        <view class="right flex-between" @tap="inJump">
          <view class="pointName">{{inPointName}}</view>
          <image  src="/images/up.png" class="image"></image>
        </view>
      </view>
      <view class="name flex-between">
        <view class="left">积分数量：</view>
        <view class="right flex-between">
          <input
          class="input-num"
          type="number"
          value="{{inBalance}}"
          bindinput="bindInInput"
          placeholder="请输入需要的积分数"
          placeholder-style="color:rgba(153,153,153,1);font-size:24rpx;font-weight:400;"
          />
          <image  src="/images/up.png" class="image"></image>
        </view>
      </view>
    </view>
    <view class="bottom flex-between">
      <view>交换周期：</view>
      <view>
        <picker bindchange="bindPickerChange" value="{{selected}}" range="{{array}}">
          <view class="picker">
            {{array[selected]}}天
          </view>
        </picker>
      </view>
      <image  src="/images/up.png" class="image"></image>
    </view>
    <view class="tips">
      <view class="title">温馨提示</view>
      <view class="tips1">1. 超过交换周期未成交的交换申请，系统将自动取消。 </view>
      <view class="tips1">2. 推荐最优换入数量为系统建议。未按推荐最优换入数量提交申请，可能会影响成交。 </view>
    </view>
    <button formType="submit" class="btn commonbtn" plain="true" @tap="apply">提交申请</button>
    <ListBottom marginTop="58"/>
    <!-- 确认取消模态框 -->
    <exModal
      title="积分交换确认"
      hidden="{{modalHidden}}"
      @confirm.user="modalConfirm"
      @cancel.user="modalCandel"
      confirmText="确认"
      closeText="取消"
      imgUrl="https://blockchain-1253289665.cos.ap-beijing.myqcloud.com/images/title/2.png"
    >
     <view class="modal-content" wx:if="{{textFlag === 1}}">
        <view>您当前提交的申请偏离市场价格过多</view>
        <view>请确认是否继续提交交换申请</view>
      </view>
      <view class="modal-content" wx:else>
        <view>使用{{outBalance}}个{{outPointName}}</view>
        <view>换回{{inBalance}}个{{inPointName}}</view>
      </view>
    </exModal>
  </view>
</template>
<script>
import wepy from 'wepy';
import api from '@/api/api';
import util from '@/utils/util';
import exModal from '@/components/ExModal';
import tips from '@/utils/tip';
import ListBottom from '@/components/listBottom';
import BackHome from '@/components/backHome';
export default class Apply extends wepy.page {
  config = {
    navigationBarTitleText: '交换申请'
  };
  components = {
    ListBottom,
    exModal,
    BackHome
  }
  data = {
    selectOut: '',
    outPointName: '请选择换出的积分',
    outPointCode: '',
    outBalance: '',
    outBalanceBak: '',
    inPointName: '请选择需要的积分',
    inPointCode: '',
    inBalance: '',
    modalHidden: true,
    array: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],
    selected: 9,
    textFlag: ''
  };
  onShow() {
    let outPoints = this.$parent.globalData.outPoints;
    let inPoints = this.$parent.globalData.inPoints;
    if (outPoints && outPoints.flag === '1') {
      this.outPointName = outPoints.pointName;
      this.outPointCode = outPoints.pointCode;
      this.inPointName = '请选择需要的积分';
      this.inPointCode = '';
      this.inBalance = '';
      this.getPointOutDetail();
    }
    if (inPoints && inPoints.flag === '2') {
      this.inPointName = inPoints.pointName;
      this.inPointCode = inPoints.pointCode;
      this.getPointInDetail();
    }
  }
  onLoad() {
    this.getPointOut();
  }
  onUnload() {
    this.$parent.globalData.outPoints = {};
    this.$parent.globalData.inPoints = {};
  }
  validateNumber(val) {
    return val.replace(/\D/g, '');
  }
  methods = {
    bindPickerChange: (e) => {
      this.selected = e.detail.value;
      this.$apply();
    },
    bindOutInput(e) {
      let value = this.validateNumber(e.detail.value);
      this.outBalance = parseInt(value);
      this.$parent.globalData.outPoints.outBalance = value;
      this.setData({
        outBalance: value
      });
    },
    bindInInput(e) {
      let value = this.validateNumber(e.detail.value);
      this.inBalance = parseInt(value);
      this.setData({
        inBalance: value
      });
    },
    apply(e) {
      this.textFlag = '';
      if (this.outPointCode === '' || this.outBalance === '') {
        tips.error('请选择换出积分');
        return false;
      }
      if (this.outBalance === '0' || this.outBalance === 0) {
        tips.error('换出积分不能为0');
        return false;
      }
      if (this.inpointCode === '' || this.inBalance === '') {
        tips.error('请选择换入积分');
        return false;
      }
      if (this.inBalance === '0' || this.inBalance === 0) {
        tips.error('换入积分不能为0');
        return false;
      }
      if (this.outBalance * 1 > this.outBalanceBak * 1) {
        tips.error('填入积分不能大于钱包积分');
        return false;
      }
      if ((this.outBalanceBak / (this.inBalanceBak * 1.2)) > (this.outBalance / this.inBalance) || (this.outBalanceBak / (this.inBalanceBak * 0.8)) < (this.outBalance / this.inBalance)) {
        this.textFlag = 1;
      }
      this.modalHidden = false;
    },
    // 确认关闭模态框
    modalCandel() {
      this.modalHidden = true;
    },
    modalConfirm() {
      let query = {
        exchangeDay: this.selected + 1,
        inPointCode: this.inPointCode,
        inPointName: this.inPointName,
        inTranNum: this.inBalance * 1,
        outPointCode: this.outPointCode,
        outPointName: this.outPointName,
        outTranNum: this.outBalance * 1
      };
      wepy.reLaunch({
        url: '/pages/Exchange/exchangeSucc?query=' + JSON.stringify(query)
      });
      this.modalHidden = true;
    },
    inJump() {
      if (this.outPointCode === '') {
        tips.error('请先选择换出积分');
        return false;
      };
      if (this.outBalance === '') {
        tips.error('请输入换出积分数量');
        return false;
      };
      wx.navigateTo({
        url: '/pages/Exchange/selectPoint?flag=2'
      });
    }
  }
  // 获取换出积分输入框值
  async getPointOut() {
    await api.getPointOutList({ method: 'POST', query: { pointEnable: 1, page: { pageNum: 1, pageSize: 999 } } });
  }
  async getPointOutDetail() {
    let resp = await api.getPointOutDetail({
      method: 'POST',
      pointCode: this.outPointCode
    });
    if (resp.data.httpCode === '200') {
      let result = resp.data.data;
      this.outBalance = util.numToFixedInt(result.outBalance);
      this.outBalanceBak = util.numToFixedInt(result.outBalance);
      this.$parent.globalData.outPoints.outBalance = util.numToFixedInt(result.outBalance);
      this.$parent.globalData.outPoints.outBalanceBak = util.numToFixedInt(result.outBalance);
      this.selectOut = result;
      this.$apply();
    }
  }
  // 获取可换入积分
  async getPointInDetail() {
    let query = {
      outPointCode: this.outPointCode,
      outTranNum: this.outBalance,
      inPointCode: this.inPointCode
    };
    let resp = await api.getPointInDetail({
      method: 'POST',
      query: query
    });
    if (resp.data.httpCode === '200') {
      let result = resp.data.data;
      this.inBalance = util.numToFixedInt(result.inBalance);
      this.inBalanceBak = util.numToFixedInt(result.inBalance);
      this.outBalanceBak = this.outBalance;
      this.$apply();
    }
  }
}
</script>
<style lang="less" scoped>
@import '../../styles/variables';
@import '../../styles/mixins';
.apply {
  .top {
    width: 690rpx;
    height: 428rpx;
    margin: 0 auto;
    background: rgba(255, 255, 255, 1);
    box-shadow: 0rpx 10rpx 30rpx 0rpx rgba(130, 136, 202, 0.2);
    border-radius: 10rpx;
    margin-top: 44rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
    .title {
      height: 104rpx;
      line-height: 104rpx;
      border-bottom: 1px dashed #d8d8d8;
      .icon {
        width: 32rpx;
        height: 32rpx;
        margin-top: 36rpx;
      }
      .word {
        flex: 1;
        margin-left: 20rpx;
        font-size: 32rpx;
        font-weight: 600;
        color: rgba(3, 3, 3, 1);
      }
    }
    .name {
      width: 590rpx;
      margin: 0 auto;
      margin-top: 58rpx;
      height: 72rpx;
      line-height: 72rpx;
      .left {
        color: rgba(102, 102, 102, 1);
      }
      .right {
        width: 440rpx;
        height: 72rpx;
        border-radius: 10rpx;
        border: 1rpx solid rgba(216, 216, 216, 1);
        .pointName {
          font-weight: 600;
          margin-left: 20rpx;
          width: 350rpx;
          .ellipsis();
        }
        .input-num {
          font-weight: 600;
          margin-left: 20rpx;
          height: 72rpx;
        }
        .image {
          width: 29rpx;
          height: 16rpx;
          margin-top: 28rpx;
          margin-right: 20rpx;
        }
      }
    }
  }
  .bottom {
    width: 690rpx;
    height: 100rpx;
    background: rgba(255, 255, 255, 1);
    box-shadow: 0rpx 10rpx 30rpx 0rpx rgba(130, 136, 202, 0.2);
    border-radius: 10rpx;
    margin: 0 auto;
    margin-top: 30rpx;
    padding: 0 50rpx;
    box-sizing: border-box;
    line-height: 100rpx;
    :nth-child(1) {
      color: rgba(102, 102, 102, 1);
    }
    :nth-child(2) {
      flex: 1;
      font-weight: 600;
      text-align: right;
      margin-right: 20rpx;
    }
    .image {
      width: 29rpx;
      height: 16rpx;
      margin-top: 40rpx;
    }
  }
  .tips {
    width: 750rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
    margin-top: 40rpx;
    .title {
      margin-bottom: 20rpx;
    }
    .tips1 {
      font-size: 24rpx;
      color: rgba(102, 102, 102, 1);
      line-height: 34rpx;
    }
  }
  .btn {
    .commonbtn(120rpx);
  }
}
</style>
